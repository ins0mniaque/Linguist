<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="$(TargetDir)Localizer.CLDR.dll" #>
<#@ import namespace="Localizer.CLDR" #>
<#@ import namespace="System.Xml.Linq" #>
using System.Globalization;

using Localizer.Plural;

namespace Localizer.CLDR
{
    internal static class RuleSets
    {
        public static PluralFormSelector GetCardinalRuleSet ( CultureInfo culture )
        {
            return null;
        }

        public static PluralFormSelector GetOrdinalRuleSet ( CultureInfo culture )
        {
            return null;
        }

        public static PluralFormRangeSelector GetRangeRuleSet ( CultureInfo culture )
        {
            return null;
        }
    }
<#
    var plurals = XDocument.Load ( Host.ResolvePath ( "CLDR/common/supplemental/plurals.xml" ) );

    foreach ( var element in plurals.Descendants ( "pluralRule" ) )
    {
        var rule = PluralRule.Parse ( element.Value.ToString ( ) );
        if ( string.IsNullOrEmpty ( rule ) )
            continue;
#>

    public class <#= element.Parent.Attribute ( "locales" ).Value.Replace ( " ", "_" ) #>_<#= element.Attribute ( "count" ).Value #>
    {
        public static bool Rule ( decimal number ) => false; // <#= rule #>
    }
<#
    }
#>
}