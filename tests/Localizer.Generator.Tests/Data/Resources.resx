<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Culture" xml:space="preserve">
    <value>Property exists error</value>
  </data>
  <data name="Error.Format" xml:space="preserve">
    <value>Error {0}}</value>
  </data>
  <data name="Error.Name" xml:space="preserve">
    <value>Can't create Error.Name format method</value>
  </data>
  <data name="Error/Name" xml:space="preserve">
    <value>Can't create Error/Name format method</value>
  </data>
  <data name="ErrorFormatName" xml:space="preserve">
    <value>Error {0}</value>
  </data>
  <data name="ErrorFormatNameFormat" xml:space="preserve">
    <value>Can't create ErrorFormatName format method</value>
  </data>
  <data name="File" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Assets\File.dat;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="FormatTest" xml:space="preserve">
    <value>Test {0}</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Assets\Icon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Image" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Assets\Image.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="LinguisticsFormat" xml:space="preserve">
    <value>{0} {0:item;items;items}</value>
  </data>
  <data name="MultiFormat" xml:space="preserve">
    <value>Test {0} {1}</value>
  </data>
  <data name="MultiLinguisticsFormat" xml:space="preserve">
    <value>{0:There is a dog;There are {NUMBER:Format} dogs;There are no dogs} and {1:there is a cat;There are {DECIMAL} cats;There are no cats}</value>
  </data>
  <data name="NoError.Name" xml:space="preserve">
    <value>No errors</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="TestFormat" xml:space="preserve">
    <value>Test {0}</value>
  </data>
  <data name="TestWithComment" xml:space="preserve">
    <value>Test with comment</value>
    <comment>Comment!</comment>
  </data>
  <data name="$this.Button.Text" xml:space="preserve">
    <value>WinForms test</value>
  </data>
  <data name="LoremIpsum" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vel elit scelerisque mauris pellentesque pulvinar. Faucibus purus in massa tempor nec feugiat nisl pretium. Vel elit scelerisque mauris pellentesque pulvinar pellentesque habitant morbi tristique. Viverra justo nec ultrices dui sapien eget mi proin sed. Elit sed vulputate mi sit amet mauris commodo. Consectetur a erat nam at. Turpis massa tincidunt dui ut ornare lectus sit amet est. Odio tempor orci dapibus ultrices. Porttitor massa id neque aliquam vestibulum morbi blandit. In ornare quam viverra orci sagittis. Quam quisque id diam vel quam elementum pulvinar. Lectus nulla at volutpat diam ut venenatis tellus. Proin nibh nisl condimentum id venenatis a. Enim diam vulputate ut pharetra sit amet. Magnis dis parturient montes nascetur ridiculus. In pellentesque massa placerat duis. Ipsum dolor sit amet consectetur adipiscing elit duis. Nisi vitae suscipit tellus mauris a diam maecenas sed enim. Lorem donec massa sapien faucibus et molestie.

Posuere ac ut consequat semper viverra nam libero. Aliquam faucibus purus in massa tempor nec feugiat nisl pretium. Libero volutpat sed cras ornare arcu dui vivamus arcu. Facilisis mauris sit amet massa vitae. Quis enim lobortis scelerisque fermentum dui faucibus in ornare quam. Est lorem ipsum dolor sit amet consectetur adipiscing elit. Egestas sed tempus urna et pharetra pharetra massa massa ultricies. In massa tempor nec feugiat nisl pretium fusce id velit. Hendrerit gravida rutrum quisque non tellus orci ac auctor. Elit scelerisque mauris pellentesque pulvinar pellentesque. Nisi vitae suscipit tellus mauris a diam maecenas. Eget duis at tellus at. Ut tellus elementum sagittis vitae et. At volutpat diam ut venenatis tellus. Dictum sit amet justo donec. Dapibus ultrices in iaculis nunc sed.

Neque convallis a cras semper auctor neque vitae tempus. Ac tortor dignissim convallis aenean et tortor at. Nulla aliquet porttitor lacus luctus accumsan tortor posuere ac. Eget felis eget nunc lobortis. Ut tristique et egestas quis ipsum suspendisse ultrices. Enim tortor at auctor urna nunc id cursus metus. Lectus magna fringilla urna porttitor rhoncus dolor purus non enim. Nulla malesuada pellentesque elit eget gravida. Morbi blandit cursus risus at ultrices mi tempus. Magna fermentum iaculis eu non. Scelerisque felis imperdiet proin fermentum leo vel orci porta non. Nullam vehicula ipsum a arcu cursus vitae congue mauris. Vulputate enim nulla aliquet porttitor lacus. Egestas sed sed risus pretium quam vulputate dignissim suspendisse. Quam nulla porttitor massa id neque aliquam vestibulum morbi. Pharetra vel turpis nunc eget.

Vel risus commodo viverra maecenas accumsan lacus. Aliquet eget sit amet tellus cras. Dapibus ultrices in iaculis nunc sed augue lacus viverra vitae. Nulla facilisi cras fermentum odio eu feugiat pretium. Nec ultrices dui sapien eget mi proin sed libero enim. Tortor at risus viverra adipiscing at in. Vulputate odio ut enim blandit. Libero nunc consequat interdum varius sit amet mattis vulputate. Etiam sit amet nisl purus. A erat nam at lectus urna duis convallis convallis. Dis parturient montes nascetur ridiculus mus. Mi quis hendrerit dolor magna eget est. Placerat vestibulum lectus mauris ultrices eros in cursus turpis massa. Suspendisse in est ante in nibh mauris. Auctor neque vitae tempus quam pellentesque nec nam aliquam. Massa enim nec dui nunc mattis enim ut tellus.

Viverra orci sagittis eu volutpat. Tempus urna et pharetra pharetra massa massa. Turpis egestas sed tempus urna et pharetra pharetra. Sed euismod nisi porta lorem mollis aliquam ut porttitor leo. Morbi tristique senectus et netus. Sed odio morbi quis commodo odio aenean sed adipiscing diam. Integer quis auctor elit sed vulputate mi sit amet mauris. Arcu felis bibendum ut tristique et egestas. Quisque id diam vel quam elementum pulvinar etiam non. Id ornare arcu odio ut. Lacus sed turpis tincidunt id aliquet risus feugiat in. Nisl purus in mollis nunc sed id semper risus. Vitae purus faucibus ornare suspendisse sed. Cursus mattis molestie a iaculis at erat pellentesque. Suspendisse ultrices gravida dictum fusce ut placerat orci. Proin gravida hendrerit lectus a. Massa tempor nec feugiat nisl pretium. Neque sodales ut etiam sit amet nisl.</value>
  </data>
  <data name="WordWrapTest" xml:space="preserve">
    <value>Test</value>
    <comment>This is a test to test word-wrapping ability. This is a test to test word-wrapping ability. This is a test to test word-wrapping ability. This is a test to test word-wrapping ability.

This is a test to test word-wrapping ability.


This is a test to test word-wrapping ability.

ThisisatesttotestwordwrappingabilityThisisatesttotestwordwrappingabilityThisisatesttotestwordwrappingabilityThisisatesttotestwordwrappingabilityThisisatesttotestwordwrappingability

!</comment>
  </data>
  <data name="RangeSupport.Range.One" xml:space="preserve">
    <value />
  </data>
</root>